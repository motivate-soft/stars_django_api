{"version":3,"sources":["views/AdminPages/Auth/PasswordResetConfirm/PasswordResetConfirm.js"],"names":["PasswordResetConfirm","handleSubmit","fields","props","confirmPasswordChange","className","md","initialValues","new_password1","new_password2","validationSchema","Yup","shape","min","required","oneOf","onSubmit","values","touched","errors","loading","handleChange","handleBlur","isValid","handleReset","style","width","noValidate","name","addonType","type","id","placeholder","valid","invalid","onChange","onBlur","value","xs","sm","color","disabled","onClick","Component","actionCreators","userActions","connect","withRouter"],"mappings":"4RAyBMA,E,4MACFC,aAAe,SAACC,GACZ,EAAKC,MAAMC,sBAAsBF,EAAQ,EAAKC,Q,uDAGxC,IAAD,OACL,OACI,yBAAKE,UAAU,sDACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMA,UAAU,0BACZ,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,UAAU,OACb,kBAAC,IAAD,KACI,wBAAIA,UAAU,eAAd,wBAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaA,UAAU,QACnB,kBAAC,IAAD,CACIE,cAAe,CACXC,cAAe,GACfC,cAAe,IAEnBC,iBAAkBC,WAAaC,MAAM,CACjCJ,cAAeG,WACVE,IACG,EAFO,sCAGwB,EAHxB,iBAMVC,SAAS,wBACdL,cAAeE,WACVI,MACG,CAACJ,MAAQ,iBAAkB,MAC3B,wBAEHG,SACG,uCAGZE,SAAU,SAACd,GAAD,OAAY,EAAKD,aAAaC,MACvC,SAACC,GAAW,IAELc,EASAd,EATAc,OACAC,EAQAf,EARAe,QACAC,EAOAhB,EAPAgB,OACAC,EAMAjB,EANAiB,QACAC,EAKAlB,EALAkB,aACAC,EAIAnB,EAJAmB,WACAC,EAGApB,EAHAoB,QACAtB,EAEAE,EAFAF,aACAuB,EACArB,EADAqB,YAGJ,OACI,kBAAC,IAAD,CACIC,MAAO,CAAEC,MAAO,QAChBV,SAAUf,EACV0B,YAAU,EACVC,KAAK,qBACL,kBAAC,IAAD,CAAavB,UAAU,QACnB,kBAAC,IAAD,CAAkBwB,UAAU,WACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,KAAK,sBAGpB,kBAAC,IAAD,CACIE,KAAK,WACLF,KAAK,gBACLG,GAAG,gBACHC,YAAY,WACZC,OAAQd,EAAOX,cACf0B,QACIhB,EAAQV,iBACNW,EAAOX,cAEbM,UAAQ,EACRqB,SAAUd,EACVe,OAAQd,EACRe,MAAOpB,EAAOT,gBAElB,kBAAC,IAAD,qGAMJ,kBAAC,IAAD,CAAaH,UAAU,QACnB,kBAAC,IAAD,CAAkBwB,UAAU,WACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,KAAK,sBAGpB,kBAAC,IAAD,CACIE,KAAK,WACLF,KAAK,gBACLG,GAAG,gBACHC,YAAY,mBACZC,OAAQd,EAAOV,cACfyB,QACIhB,EAAQT,iBACNU,EAAOV,cAEbK,UAAQ,EACRqB,SAAUd,EACVe,OAAQd,EACRe,MAAOpB,EAAOR,gBAElB,kBAAC,IAAD,qGAMJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CACI6B,GAAG,KACHC,GAAG,IACHlC,UAAU,eACV,kBAAC,IAAD,CACIyB,KAAK,SACLU,MAAM,UACNnC,UAAU,OACVoC,UACKlB,GAAWH,GAEfA,EACK,UACA,qBAGd,kBAAC,IAAD,CACIkB,GAAG,KACHC,GAAG,IACHlC,UAAU,eACV,kBAAC,IAAD,CACIyB,KAAK,QACLU,MAAM,UACNnC,UAAU,OACVqC,QAASlB,GAJb,2B,GAvIjCmB,aAgK7BC,EAAiB,CACnBxC,sBAAuByC,IAAYzC,uBAGxB0C,sBAAQ,KAAMF,EAAdE,CAA8BC,YAAW/C","file":"static/js/7.d09f2d0f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {\n    CButton,\n    CCard,\n    CCardHeader,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CFormFeedback,\n    CInput,\n    CInputGroup,\n    CInputGroupAddon,\n    CInputGroupText,\n    CRow\n} from '@coreui/react';\nimport { CIcon } from '@coreui/icons-react';\n\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { userActions } from '../../../../_actions/user.actions';\n\nclass PasswordResetConfirm extends Component {\n    handleSubmit = (fields) => {\n        this.props.confirmPasswordChange(fields, this.props);\n    };\n\n    render() {\n        return (\n            <div className=\"c-app c-default-layout flex-row align-items-center\">\n                <CContainer>\n                    <CRow className=\"justify-content-center\">\n                        <CCol md=\"5\">\n                            <CCardGroup>\n                                <CCard className=\"p-4\">\n                                    <CCardHeader>\n                                        <h3 className=\"text-center\">Create New Password</h3>\n                                    </CCardHeader>\n                                    <CCardBody>\n                                        <CInputGroup className=\"mb-3\">\n                                            <Formik\n                                                initialValues={{\n                                                    new_password1: '',\n                                                    new_password2: ''\n                                                }}\n                                                validationSchema={Yup.object().shape({\n                                                    new_password1: Yup.string()\n                                                        .min(\n                                                            6,\n                                                            `Password has to be at least ${6} characters!`\n                                                        )\n                                                        // .matches(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/, 'Password must contain: numbers, uppercase and lowercase letters\\n')\n                                                        .required('Password is required'),\n                                                    new_password2: Yup.string()\n                                                        .oneOf(\n                                                            [Yup.ref('new_password1'), null],\n                                                            'Passwords must match'\n                                                        )\n                                                        .required(\n                                                            'Password confirmation is required'\n                                                        )\n                                                })}\n                                                onSubmit={(fields) => this.handleSubmit(fields)}>\n                                                {(props) => {\n                                                    const {\n                                                        values,\n                                                        touched,\n                                                        errors,\n                                                        loading,\n                                                        handleChange,\n                                                        handleBlur,\n                                                        isValid,\n                                                        handleSubmit,\n                                                        handleReset\n                                                    } = props;\n\n                                                    return (\n                                                        <CForm\n                                                            style={{ width: '100%' }}\n                                                            onSubmit={handleSubmit}\n                                                            noValidate\n                                                            name=\"resetPasswordForm\">\n                                                            <CInputGroup className=\"mb-4\">\n                                                                <CInputGroupAddon addonType=\"prepend\">\n                                                                    <CInputGroupText>\n                                                                        <CIcon name=\"cil-lock-locked\" />\n                                                                    </CInputGroupText>\n                                                                </CInputGroupAddon>\n                                                                <CInput\n                                                                    type=\"password\"\n                                                                    name=\"new_password1\"\n                                                                    id=\"new_password1\"\n                                                                    placeholder=\"Password\"\n                                                                    valid={!errors.new_password1}\n                                                                    invalid={\n                                                                        touched.new_password1 &&\n                                                                        !!errors.new_password1\n                                                                    }\n                                                                    required\n                                                                    onChange={handleChange}\n                                                                    onBlur={handleBlur}\n                                                                    value={values.new_password1}\n                                                                />\n                                                                <CFormFeedback>\n                                                                    Required password containing at\n                                                                    least: number, uppercase and\n                                                                    lowercase letter, 8 characters\n                                                                </CFormFeedback>\n                                                            </CInputGroup>\n                                                            <CInputGroup className=\"mb-4\">\n                                                                <CInputGroupAddon addonType=\"prepend\">\n                                                                    <CInputGroupText>\n                                                                        <CIcon name=\"cil-lock-locked\" />\n                                                                    </CInputGroupText>\n                                                                </CInputGroupAddon>\n                                                                <CInput\n                                                                    type=\"password\"\n                                                                    name=\"new_password2\"\n                                                                    id=\"new_password2\"\n                                                                    placeholder=\"Confirm Password\"\n                                                                    valid={!errors.new_password2}\n                                                                    invalid={\n                                                                        touched.new_password2 &&\n                                                                        !!errors.new_password2\n                                                                    }\n                                                                    required\n                                                                    onChange={handleChange}\n                                                                    onBlur={handleBlur}\n                                                                    value={values.new_password2}\n                                                                />\n                                                                <CFormFeedback>\n                                                                    Required password containing at\n                                                                    least: number, uppercase and\n                                                                    lowercase letter, 8 characters\n                                                                </CFormFeedback>\n                                                            </CInputGroup>\n                                                            <CRow>\n                                                                <CCol\n                                                                    xs=\"12\"\n                                                                    sm=\"6\"\n                                                                    className=\"text-center\">\n                                                                    <CButton\n                                                                        type=\"submit\"\n                                                                        color=\"primary\"\n                                                                        className=\"mr-1\"\n                                                                        disabled={\n                                                                            !isValid || loading\n                                                                        }>\n                                                                        {loading\n                                                                            ? 'Wait...'\n                                                                            : 'Set new password'}\n                                                                    </CButton>\n                                                                </CCol>\n                                                                <CCol\n                                                                    xs=\"12\"\n                                                                    sm=\"6\"\n                                                                    className=\"text-center\">\n                                                                    <CButton\n                                                                        type=\"reset\"\n                                                                        color=\"default\"\n                                                                        className=\"mr-1\"\n                                                                        onClick={handleReset}>\n                                                                        Reset\n                                                                    </CButton>\n                                                                </CCol>\n                                                            </CRow>\n                                                        </CForm>\n                                                    );\n                                                }}\n                                            </Formik>\n                                        </CInputGroup>\n                                    </CCardBody>\n                                </CCard>\n                            </CCardGroup>\n                        </CCol>\n                    </CRow>\n                </CContainer>\n            </div>\n        );\n    }\n}\n\nconst actionCreators = {\n    confirmPasswordChange: userActions.confirmPasswordChange\n};\n\nexport default connect(null, actionCreators)(withRouter(PasswordResetConfirm));\n"],"sourceRoot":""}