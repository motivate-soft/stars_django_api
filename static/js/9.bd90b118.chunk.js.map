{"version":3,"sources":["views/AdminPages/Auth/PasswordReset/PasswordReset.js"],"names":["emailReset","handleSubmit","fields","props","getPasswordResetToken","email","history","loading","this","className","md","initialValues","validationSchema","Yup","shape","required","onSubmit","values","errors","touched","handleChange","handleBlur","isValid","noValidate","name","addonType","type","id","placeholder","valid","invalid","onChange","onBlur","value","xs","color","disabled","to","Component","actionCreators","alertError","alertActions","error","userActions","connect","state","authentication"],"mappings":"0RAwBMA,E,4MACFC,aAAe,SAACC,GACZ,EAAKC,MAAMC,sBAAsBF,EAAOG,MAAO,EAAKF,MAAMG,U,uDAGpD,IACEC,EAAYC,KAAKL,MAAjBI,QACR,OACI,yBAAKE,UAAU,sDACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMA,UAAU,0BACZ,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,UAAU,OACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaA,UAAU,QACnB,kBAAC,IAAD,CACIE,cAAe,CACXN,MAAO,IAEXO,iBAAkBC,WAAaC,MAAM,CACjCT,MAAOQ,WACFR,MAAM,yBACNU,SAAS,wBAElBC,SAAUR,KAAKP,eACd,SAACE,GAAW,IAELc,EAOAd,EAPAc,OACAC,EAMAf,EANAe,OACAC,EAKAhB,EALAgB,QACAC,EAIAjB,EAJAiB,aACAC,EAGAlB,EAHAkB,WACApB,EAEAE,EAFAF,aACAqB,EACAnB,EADAmB,QAEJ,OACI,kBAAC,IAAD,CACIN,SAAUf,EACVsB,YAAU,EACVC,KAAK,qBACL,kBAAC,IAAD,CAAaf,UAAU,QACnB,sHAKA,kBAAC,IAAD,CAAkBgB,UAAU,WACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,KAAK,sBAGpB,kBAAC,IAAD,CACIE,KAAK,QACLF,KAAK,QACLG,GAAG,QACHC,YAAY,QACZC,OAAQX,EAAOb,MACfyB,QACIX,EAAQd,SACNa,EAAOb,MAEbU,UAAQ,EACRgB,SAAUX,EACVY,OAAQX,EACRY,MAAOhB,EAAOZ,QAElB,kBAAC,IAAD,KACKa,EAAOb,QAGhB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM6B,GAAG,KACL,kBAAC,IAAD,CACIR,KAAK,SACLS,MAAM,UACN1B,UAAU,OACV2B,SACI7B,IAAYe,GAEff,EACK,UACA,eAGd,kBAAC,IAAD,CAAM2B,GAAG,IAAIzB,UAAU,cACnB,kBAAC,IAAD,CAAM4B,GAAG,gBACL,kBAAC,IAAD,CACIF,MAAM,OACN1B,UAAU,QAFd,6B,GAvF/C6B,aAoHzB,IAAMC,EAAiB,CACnBC,WAAYC,IAAaC,MACzBtC,sBAAuBuC,IAAYvC,uBAGxBwC,uBAVf,SAAkBC,GAEd,MAAO,CAAEtC,QADWsC,EAAMC,eAAlBvC,WASqBgC,EAAlBK,CAAkC5C","file":"static/js/9.bd90b118.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n    CButton,\n    CCard,\n    CCardBody,\n    CCardGroup,\n    CCol,\n    CContainer,\n    CForm,\n    CFormFeedback,\n    CInput,\n    CInputGroup,\n    CInputGroupAddon,\n    CInputGroupText,\n    CRow\n} from '@coreui/react';\nimport { CIcon } from '@coreui/icons-react';\n\nimport { alertActions, userActions } from '../../../../_actions';\nimport { connect } from 'react-redux';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\nclass emailReset extends Component {\n    handleSubmit = (fields) => {\n        this.props.getPasswordResetToken(fields.email, this.props.history);\n    };\n\n    render() {\n        const { loading } = this.props;\n        return (\n            <div className=\"c-app c-default-layout flex-row align-items-center\">\n                <CContainer>\n                    <CRow className=\"justify-content-center\">\n                        <CCol md=\"5\">\n                            <CCardGroup>\n                                <CCard className=\"p-4\">\n                                    <CCardBody>\n                                        <CInputGroup className=\"mb-3\">\n                                            <Formik\n                                                initialValues={{\n                                                    email: ''\n                                                }}\n                                                validationSchema={Yup.object().shape({\n                                                    email: Yup.string()\n                                                        .email('Invalid email address')\n                                                        .required('Email is required!')\n                                                })}\n                                                onSubmit={this.handleSubmit}>\n                                                {(props) => {\n                                                    const {\n                                                        values,\n                                                        errors,\n                                                        touched,\n                                                        handleChange,\n                                                        handleBlur,\n                                                        handleSubmit,\n                                                        isValid\n                                                    } = props;\n                                                    return (\n                                                        <CForm\n                                                            onSubmit={handleSubmit}\n                                                            noValidate\n                                                            name=\"resetpasswordForm\">\n                                                            <CInputGroup className=\"mb-4\">\n                                                                <p>\n                                                                    Please enter email address. You\n                                                                    will receive a link to create a\n                                                                    new password via email.\n                                                                </p>\n                                                                <CInputGroupAddon addonType=\"prepend\">\n                                                                    <CInputGroupText>\n                                                                        <CIcon name=\"cil-lock-locked\" />\n                                                                    </CInputGroupText>\n                                                                </CInputGroupAddon>\n                                                                <CInput\n                                                                    type=\"email\"\n                                                                    name=\"email\"\n                                                                    id=\"email\"\n                                                                    placeholder=\"email\"\n                                                                    valid={!errors.email}\n                                                                    invalid={\n                                                                        touched.email &&\n                                                                        !!errors.email\n                                                                    }\n                                                                    required\n                                                                    onChange={handleChange}\n                                                                    onBlur={handleBlur}\n                                                                    value={values.email}\n                                                                />\n                                                                <CFormFeedback>\n                                                                    {errors.email}\n                                                                </CFormFeedback>\n                                                            </CInputGroup>\n                                                            <CRow>\n                                                                <CCol xs=\"8\">\n                                                                    <CButton\n                                                                        type=\"submit\"\n                                                                        color=\"primary\"\n                                                                        className=\"px-4\"\n                                                                        disabled={\n                                                                            loading || !isValid\n                                                                        }>\n                                                                        {loading\n                                                                            ? 'Wait...'\n                                                                            : 'Send email'}\n                                                                    </CButton>\n                                                                </CCol>\n                                                                <CCol xs=\"4\" className=\"text-right\">\n                                                                    <Link to=\"/admin/login\">\n                                                                        <CButton\n                                                                            color=\"link\"\n                                                                            className=\"px-0\">\n                                                                            Log in\n                                                                        </CButton>\n                                                                    </Link>\n                                                                </CCol>\n                                                            </CRow>\n                                                        </CForm>\n                                                    );\n                                                }}\n                                            </Formik>\n                                        </CInputGroup>\n                                    </CCardBody>\n                                </CCard>\n                            </CCardGroup>\n                        </CCol>\n                    </CRow>\n                </CContainer>\n            </div>\n        );\n    }\n}\n\nfunction mapState(state) {\n    const { loading } = state.authentication;\n    return { loading };\n}\n\nconst actionCreators = {\n    alertError: alertActions.error,\n    getPasswordResetToken: userActions.getPasswordResetToken\n};\n\nexport default connect(mapState, actionCreators)(emailReset);\n"],"sourceRoot":""}