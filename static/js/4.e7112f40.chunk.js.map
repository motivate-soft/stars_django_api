{"version":3,"sources":["assets/brand/logo-horizontal.png","routes/_nav.js","containers/AdminLayout/DefaultSidebar.js"],"names":["module","exports","items","name","url","icon","badge","variant","text","children","DefaultSidebar","props","state","activeTab","minimize","sidebarMinimize","k","lastSidebarMinimize","this","sidebarShow","onChange","location","setState","show","unfoldable","onShowUpdate","to","imgFull","width","height","alt","src","logo","navConfig","navigation","className","onClick","Component","defaultProps"],"mappings":"8JAAAA,EAAOC,QAAU,IAA0B,6C,oHCA5B,GACXC,MAAO,CACH,CACIC,KAAM,YACNC,IAAK,mBACLC,KAAM,kBACNC,MAAO,CACHC,QAAS,OACTC,KAAM,QAGd,CACIL,KAAM,QACNC,IAAK,eACLC,KAAM,YAEV,CACIF,KAAM,iBACNE,KAAM,YACNI,SAAU,CACN,CACIN,KAAM,WACNC,IAAK,qBAET,CACID,KAAM,aACNC,IAAK,qBAET,CACID,KAAM,YACNC,IAAK,sBAIjB,CACID,KAAM,OACNC,IAAK,cACLC,KAAM,c,QCfZK,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,UAAW,IACXC,SAAUH,EAAMI,gBAChBC,EAAG,GAEP,EAAKC,oBAAsBN,EAAMI,gBARlB,E,qDAWT,IAAD,SACwDG,KAAKP,MAA1DQ,EADH,EACGA,YAAaJ,EADhB,EACgBA,gBAAiBK,EADjC,EACiCA,SAAUC,EAD3C,EAC2CA,SAahD,OALIN,IAAoBG,KAAKD,sBACzBC,KAAKI,SAAS,CAAER,SAAUC,IAC1BG,KAAKD,oBAAsBF,GAI3B,kBAAC,IAAD,CACIQ,KAAMJ,EACNK,YAAU,EACVV,SAAUI,KAAKN,MAAME,SACrBW,aAAcL,GACd,kBAAC,IAAD,CAAMM,GAAG,KACL,kBAAC,IAAD,CACIC,QAAS,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,IAAK,OAAQC,IAAKC,QAK9D,kBAAC,WAAD,KACI,kBAAC,IAAD,CAAaC,UAAWC,EAAYb,SAAUA,GAC1C,kBAAC,IAAD,QAGR,kBAAC,IAAD,CACIc,UAAU,mBACVC,QAAS,WACL,EAAKd,SAAS,CAAER,UAAW,EAAKF,MAAME,mB,GA/CjCuB,aA2D7B3B,EAAe4B,aAAe,GAEf5B","file":"static/js/4.e7112f40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-horizontal.3fd3c91e.png\";","export default {\n    items: [\n        {\n            name: 'Dashboard',\n            url: '/admin/dashboard',\n            icon: 'cil-speedometer',\n            badge: {\n                variant: 'info',\n                text: 'NEW'\n            }\n        },\n        {\n            name: 'Users',\n            url: '/admin/users',\n            icon: 'cil-user'\n        },\n        {\n            name: 'Accommodations',\n            icon: 'cil-house',\n            children: [\n                {\n                    name: 'Listings',\n                    url: '/admin/properties'\n                },\n                {\n                    name: 'Categories',\n                    url: '/admin/categories'\n                },\n                {\n                    name: 'Amenities',\n                    url: '/admin/amenities'\n                }\n            ]\n        },\n        {\n            name: 'Text',\n            url: '/admin/text',\n            icon: 'cil-book'\n        }\n    ]\n};\n","import React, { Component, Suspense } from 'react';\nimport PropTypes from 'prop-types';\n//import classNames from 'classnames';\n//import * as router from 'react-router-dom';\nimport {\n    CSidebar,\n    CSidebarBrand,\n    CSidebarNav,\n    CSidebarNavDivider,\n    CSidebarMinimizer\n} from '@coreui/react';\n\n// import { CIcon } from '@coreui/icons-react';\n\n//logo\nimport logo from '../../assets/brand/logo-horizontal.png';\n// import sygnet from '../../assets/brand/sygnet.svg'\n\n// sidebar nav config\nimport navigation from '../../routes/_nav';\nimport { Link } from 'react-router-dom';\n\nclass DefaultSidebar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeTab: '1',\n            minimize: props.sidebarMinimize,\n            k: 2\n        };\n        this.lastSidebarMinimize = props.sidebarMinimize;\n    }\n\n    render() {\n        const { sidebarShow, sidebarMinimize, onChange, location } = this.props;\n\n        /*\n        const classesSidebar = classNames(\n        'c-sidebar-dark'\n        );\n        */\n\n        if (sidebarMinimize !== this.lastSidebarMinimize) {\n            this.setState({ minimize: sidebarMinimize });\n            this.lastSidebarMinimize = sidebarMinimize;\n        }\n\n        return (\n            <CSidebar\n                show={sidebarShow}\n                unfoldable\n                minimize={this.state.minimize}\n                onShowUpdate={onChange}>\n                <Link to=\"/\">\n                    <CSidebarBrand\n                        imgFull={{ width: 200, height: 100, alt: 'Logo', src: logo }}\n                        // imgMinimized={{width: 118, height: 46, alt: 'Logo', src: sygnet}}\n                        // linkProps={{href: 'https://coreui.io/', target: '_blank'}}\n                    />\n                </Link>\n                <Suspense>\n                    <CSidebarNav navConfig={navigation} location={location}>\n                        <CSidebarNavDivider />\n                    </CSidebarNav>\n                </Suspense>\n                <CSidebarMinimizer\n                    className=\"c-d-md-down-none\"\n                    onClick={() => {\n                        this.setState({ minimize: !this.state.minimize });\n                    }}\n                />\n            </CSidebar>\n        );\n    }\n}\n\nDefaultSidebar.propTypes = {\n    children: PropTypes.node\n};\n\nDefaultSidebar.defaultProps = {};\n\nexport default DefaultSidebar;\n"],"sourceRoot":""}