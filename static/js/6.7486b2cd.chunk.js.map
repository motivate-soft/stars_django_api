{"version":3,"sources":["views/AdminPages/Auth/Login/Login.js"],"names":["Login","handleSubmit","fields","props","login","username","password","history","loading","this","className","md","initialValues","email","validationSchema","Yup","shape","required","min","onSubmit","values","errors","touched","handleChange","handleBlur","isValid","lg","noValidate","name","addonType","type","id","placeholder","autoComplete","valid","invalid","onChange","onBlur","value","xs","color","disabled","to","Component","actionCreators","userActions","withRouter","connect","state","authentication"],"mappings":"mSAwBMA,E,4MACFC,aAAe,SAACC,GACZ,EAAKC,MAAMC,MAAMF,EAAOG,SAAUH,EAAOI,SAAU,EAAKH,MAAMI,U,uDAGxD,IACEC,EAAYC,KAAKN,MAAjBK,QAER,OACI,yBAAKE,UAAU,sDACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMA,UAAU,0BACZ,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,UAAU,OACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIE,cAAe,CACXC,MAAO,GACPP,SAAU,IAEdQ,iBAAkBC,WAAaC,MAAM,CACjCX,SAAUU,WAELE,SAAS,yBACdX,SAAUS,WACLG,IACG,EAFE,sCAG6B,EAH7B,iBAMLD,SAAS,0BAElBE,SAAUV,KAAKR,eACd,SAACE,GAAW,IAELiB,EAOAjB,EAPAiB,OACAC,EAMAlB,EANAkB,OACAC,EAKAnB,EALAmB,QACAC,EAIApB,EAJAoB,aACAC,EAGArB,EAHAqB,WACAvB,EAEAE,EAFAF,aACAwB,EACAtB,EADAsB,QAEJ,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,MACL,kBAAC,IAAD,CACIP,SAAUlB,EACV0B,YAAU,EACVC,KAAK,aACL,qCACA,uBAAGlB,UAAU,cAAb,2BAGA,kBAAC,IAAD,CAAaA,UAAU,QACnB,kBAAC,IAAD,CAAkBmB,UAAU,WACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,KAAK,eAGpB,kBAAC,IAAD,CACIE,KAAK,OACLF,KAAK,WACLG,GAAG,WACHC,YAAY,WACZC,aAAa,WACbC,OAAQb,EAAOhB,SACf8B,QACIb,EAAQjB,YACNgB,EAAOhB,SAEbY,UAAQ,EACRmB,SAAUb,EACVc,OAAQb,EACRc,MAAOlB,EAAOf,WAElB,kBAAC,IAAD,KACKgB,EAAOhB,WAGhB,kBAAC,IAAD,CAAaK,UAAU,QACnB,kBAAC,IAAD,CAAkBmB,UAAU,WACxB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOD,KAAK,sBAGpB,kBAAC,IAAD,CACIE,KAAK,WACLF,KAAK,WACLG,GAAG,WACHC,YAAY,WACZC,aAAa,eACbC,OAAQb,EAAOf,SACf6B,QACIb,EAAQhB,YACNe,EAAOf,SAEbW,UAAQ,EACRmB,SAAUb,EACVc,OAAQb,EACRc,MAAOlB,EAAOd,WAElB,kBAAC,IAAD,KACKe,EAAOf,WAOhB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMiC,GAAG,KACL,kBAAC,IAAD,CACIT,KAAK,SACLU,MAAM,UACN9B,UAAU,OACV+B,SACIjC,IAAYiB,GAEfjB,EACK,UACA,UAGd,kBAAC,IAAD,CACI+B,GAAG,IACH7B,UAAU,cACV,kBAAC,IAAD,CAAMgC,GAAG,yBACL,kBAAC,IAAD,CACIF,MAAM,OACN9B,UAAU,QAFd,wC,GAjIxDiC,aA+JpB,IAAMC,EAAiB,CACnBxC,MAAOyC,IAAYzC,OAGR0C,sBAAWC,aAT1B,SAAkBC,GAEd,MAAO,CAAExC,QADWwC,EAAMC,eAAlBzC,WAQgCoC,EAAlBG,CAAkC/C","file":"static/js/6.7486b2cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    CButton,\r\n    CCard,\r\n    CCardBody,\r\n    CCardGroup,\r\n    CCol,\r\n    CContainer,\r\n    CForm,\r\n    CFormFeedback,\r\n    CInput,\r\n    CInputGroup,\r\n    CInputGroupAddon,\r\n    CInputGroupText,\r\n    CRow\r\n} from '@coreui/react';\r\nimport { CIcon } from '@coreui/icons-react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { userActions } from '../../../../_actions';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n    handleSubmit = (fields) => {\r\n        this.props.login(fields.username, fields.password, this.props.history);\r\n    };\r\n\r\n    render() {\r\n        const { loading } = this.props;\r\n\r\n        return (\r\n            <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n                <CContainer>\r\n                    <CRow className=\"justify-content-center\">\r\n                        <CCol md=\"5\">\r\n                            <CCardGroup>\r\n                                <CCard className=\"p-4\">\r\n                                    <CCardBody>\r\n                                        <Formik\r\n                                            initialValues={{\r\n                                                email: '',\r\n                                                password: ''\r\n                                            }}\r\n                                            validationSchema={Yup.object().shape({\r\n                                                username: Yup.string()\r\n                                                    // .email('Invalid username email')\r\n                                                    .required('username is required!'),\r\n                                                password: Yup.string()\r\n                                                    .min(\r\n                                                        6,\r\n                                                        `Password has to be at least ${6} characters!`\r\n                                                    )\r\n                                                    // .matches(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}/, 'Password must contain: numbers, uppercase and lowercase letters\\n')\r\n                                                    .required('Password is required')\r\n                                            })}\r\n                                            onSubmit={this.handleSubmit}>\r\n                                            {(props) => {\r\n                                                const {\r\n                                                    values,\r\n                                                    errors,\r\n                                                    touched,\r\n                                                    handleChange,\r\n                                                    handleBlur,\r\n                                                    handleSubmit,\r\n                                                    isValid\r\n                                                } = props;\r\n                                                return (\r\n                                                    <CRow>\r\n                                                        <CCol lg=\"12\">\r\n                                                            <CForm\r\n                                                                onSubmit={handleSubmit}\r\n                                                                noValidate\r\n                                                                name=\"loginForm\">\r\n                                                                <h1>Login</h1>\r\n                                                                <p className=\"text-muted\">\r\n                                                                    Sign In to your account\r\n                                                                </p>\r\n                                                                <CInputGroup className=\"mb-3\">\r\n                                                                    <CInputGroupAddon addonType=\"prepend\">\r\n                                                                        <CInputGroupText>\r\n                                                                            <CIcon name=\"cil-user\" />\r\n                                                                        </CInputGroupText>\r\n                                                                    </CInputGroupAddon>\r\n                                                                    <CInput\r\n                                                                        type=\"text\"\r\n                                                                        name=\"username\"\r\n                                                                        id=\"username\"\r\n                                                                        placeholder=\"username\"\r\n                                                                        autoComplete=\"username\"\r\n                                                                        valid={!errors.username}\r\n                                                                        invalid={\r\n                                                                            touched.username &&\r\n                                                                            !!errors.username\r\n                                                                        }\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={values.username}\r\n                                                                    />\r\n                                                                    <CFormFeedback>\r\n                                                                        {errors.username}\r\n                                                                    </CFormFeedback>\r\n                                                                </CInputGroup>\r\n                                                                <CInputGroup className=\"mb-4\">\r\n                                                                    <CInputGroupAddon addonType=\"prepend\">\r\n                                                                        <CInputGroupText>\r\n                                                                            <CIcon name=\"cil-lock-locked\" />\r\n                                                                        </CInputGroupText>\r\n                                                                    </CInputGroupAddon>\r\n                                                                    <CInput\r\n                                                                        type=\"password\"\r\n                                                                        name=\"password\"\r\n                                                                        id=\"password\"\r\n                                                                        placeholder=\"Password\"\r\n                                                                        autoComplete=\"new-password\"\r\n                                                                        valid={!errors.password}\r\n                                                                        invalid={\r\n                                                                            touched.password &&\r\n                                                                            !!errors.password\r\n                                                                        }\r\n                                                                        required\r\n                                                                        onChange={handleChange}\r\n                                                                        onBlur={handleBlur}\r\n                                                                        value={values.password}\r\n                                                                    />\r\n                                                                    <CFormFeedback>\r\n                                                                        {errors.password}\r\n                                                                    </CFormFeedback>\r\n                                                                    {/*<CFormFeedback>Required password containing at*/}\r\n                                                                    {/*least: number, uppercase and*/}\r\n                                                                    {/*lowercase letter, 8*/}\r\n                                                                    {/*characters</CFormFeedback>*/}\r\n                                                                </CInputGroup>\r\n                                                                <CRow>\r\n                                                                    <CCol xs=\"6\">\r\n                                                                        <CButton\r\n                                                                            type=\"submit\"\r\n                                                                            color=\"primary\"\r\n                                                                            className=\"px-4\"\r\n                                                                            disabled={\r\n                                                                                loading || !isValid\r\n                                                                            }>\r\n                                                                            {loading\r\n                                                                                ? 'Wait...'\r\n                                                                                : 'Login'}\r\n                                                                        </CButton>\r\n                                                                    </CCol>\r\n                                                                    <CCol\r\n                                                                        xs=\"6\"\r\n                                                                        className=\"text-right\">\r\n                                                                        <Link to=\"/admin/reset_password\">\r\n                                                                            <CButton\r\n                                                                                color=\"link\"\r\n                                                                                className=\"px-0\">\r\n                                                                                Forgot password?\r\n                                                                            </CButton>\r\n                                                                        </Link>\r\n                                                                    </CCol>\r\n                                                                </CRow>\r\n                                                            </CForm>\r\n                                                        </CCol>\r\n                                                    </CRow>\r\n                                                );\r\n                                            }}\r\n                                        </Formik>\r\n                                    </CCardBody>\r\n                                </CCard>\r\n                            </CCardGroup>\r\n                        </CCol>\r\n                    </CRow>\r\n                </CContainer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapState(state) {\r\n    const { loading } = state.authentication;\r\n    return { loading };\r\n}\r\n\r\nconst actionCreators = {\r\n    login: userActions.login\r\n};\r\n\r\nexport default withRouter(connect(mapState, actionCreators)(Login));\r\n"],"sourceRoot":""}